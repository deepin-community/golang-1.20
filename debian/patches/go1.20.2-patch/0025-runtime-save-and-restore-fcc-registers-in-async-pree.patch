From b7e6c7e5dd57f88fc43154de8e1c81779560e608 Mon Sep 17 00:00:00 2001
From: huangqiqi <huangqiqi@loongson.cn>
Date: Thu, 16 Mar 2023 13:16:38 +0800
Subject: [PATCH 25/32] runtime: save and restore fcc registers in async
 preempt on loong64

During the context switch of goroutine scheduling, the value of the
fcc0 register needs to be saved on the stack.

Change-Id: Id390611cf891ca080187815607127493682fd6e2
---
 src/runtime/mkpreempt.go      |  6 ++++++
 src/runtime/preempt_loong64.s | 12 ++++++++----
 2 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/src/runtime/mkpreempt.go b/src/runtime/mkpreempt.go
index 61d2d0247e..70eca7c7e2 100644
--- a/src/runtime/mkpreempt.go
+++ b/src/runtime/mkpreempt.go
@@ -483,6 +483,12 @@ func genLoong64() {
 		l.add(movf, reg, regsize)
 	}
 
+	// save and restore FCC0
+	l.addSpecial(
+		mov+" FCC0, R4\n"+mov+" R4, %d(R3)",
+		mov+" %d(R3), R4\n"+mov+" R4, FCC0",
+		regsize)
+
 	// allocate frame, save PC of interrupted instruction (in LR)
 	p(mov+" R1, -%d(R3)", l.stack)
 	p(sub+" $%d, R3", l.stack)
diff --git a/src/runtime/preempt_loong64.s b/src/runtime/preempt_loong64.s
index ba59a07b7f..999e72c470 100644
--- a/src/runtime/preempt_loong64.s
+++ b/src/runtime/preempt_loong64.s
@@ -4,8 +4,8 @@
 #include "textflag.h"
 
 TEXT 路asyncPreempt(SB),NOSPLIT|NOFRAME,$0-0
-	MOVV R1, -472(R3)
-	SUBV $472, R3
+	MOVV R1, -480(R3)
+	SUBV $480, R3
 	MOVV R4, 8(R3)
 	MOVV R5, 16(R3)
 	MOVV R6, 24(R3)
@@ -64,7 +64,11 @@ TEXT 路asyncPreempt(SB),NOSPLIT|NOFRAME,$0-0
 	MOVD F29, 448(R3)
 	MOVD F30, 456(R3)
 	MOVD F31, 464(R3)
+	MOVV FCC0, R4
+	MOVV R4, 472(R3)
 	CALL 路asyncPreempt2(SB)
+	MOVV 472(R3), R4
+	MOVV R4, FCC0
 	MOVD 464(R3), F31
 	MOVD 456(R3), F30
 	MOVD 448(R3), F29
@@ -123,7 +127,7 @@ TEXT 路asyncPreempt(SB),NOSPLIT|NOFRAME,$0-0
 	MOVV 24(R3), R6
 	MOVV 16(R3), R5
 	MOVV 8(R3), R4
-	MOVV 472(R3), R1
+	MOVV 480(R3), R1
 	MOVV (R3), R30
-	ADDV $480, R3
+	ADDV $488, R3
 	JMP (R30)
-- 
2.40.0

